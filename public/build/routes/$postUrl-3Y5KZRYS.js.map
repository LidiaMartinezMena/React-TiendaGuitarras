{
  "version": 3,
  "sources": ["browser-route-module:routes/$postUrl.jsx?browser", "../../../app/routes/$postUrl.jsx"],
  "sourcesContent": ["export { default, links, meta } from \"./routes/$postUrl.jsx\";", "import { useLoaderData } from '@remix-run/react';\nimport { getPost } from '~/models/posts.server';\nimport { formatearFecha } from '~/utils/helpers';\nimport styles from '~/styles/blog.css';\n\nexport function links() {\n  return [\n  {\n    rel: 'stylesheet',\n    href: styles\n  }];\n\n}\n\n\nexport async function loader({ params }) {\n  const { postUrl } = params;\n  const post = await getPost(postUrl);\n\n  if (post.data.length === 0) {\n    throw new Response('', {\n      status: 404,\n      statusText: 'Entrada no encontrada'\n    });\n  }\n  return post;\n}\n\nexport function meta({ data }) {\n\n  if (!data) {\n    return {\n      title: 'Entrada no encontrada',\n      description: 'Guitarras, venta de guitarras, entrada no encontrada'\n    };\n  }\n  return [\n  { title: `GuitarLA - ${data.data[0].attributes.titulo}` },\n  { description: `Guitarras, venta de guitarras, entrada ${data.data[0].attributes.titulo}` }];\n\n}\n\nexport default function Post() {\n\n  const post = useLoaderData();\n\n  const { titulo, contenido, imagen, publishedAt } = post?.data[0].atributes;\n\n  return (\n    <article className='contenedor post mt-3'>\r\n            <img className=\"imagen\" src={imagen.data?.attributes.url} alt={`Imagen blog ${titulo}`} />\r\n            <div className=\"contenido\">\r\n                <h3>{titulo}</h3>\r\n                <p className=\"fecha\">{formatearFecha(publishedAt)}</p>\r\n                <p className=\"texto\">{contenido}</p>\r\n            </div>\r\n    </article>);\n\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AAAA;AAAA;AACA,mBAAwB;AAiDZ;AA7CL,SAAS,QAAQ;AACtB,SAAO;AAAA,IACP;AAAA,MACE,KAAK;AAAA,MACL,MAAM;AAAA,IACR;AAAA,EAAC;AAEH;AAgBO,SAAS,KAAK,EAAE,KAAK,GAAG;AAE7B,MAAI,CAAC,MAAM;AACT,WAAO;AAAA,MACL,OAAO;AAAA,MACP,aAAa;AAAA,IACf;AAAA,EACF;AACA,SAAO;AAAA,IACP,EAAE,OAAO,cAAc,KAAK,KAAK,CAAC,EAAE,WAAW,SAAS;AAAA,IACxD,EAAE,aAAa,0CAA0C,KAAK,KAAK,CAAC,EAAE,WAAW,SAAS;AAAA,EAAC;AAE7F;AAEe,SAAR,OAAwB;AA1C/B;AA4CE,QAAM,OAAO,cAAc;AAE3B,QAAM,EAAE,QAAQ,WAAW,QAAQ,YAAY,IAAI,6BAAM,KAAK,GAAG;AAEjE,SACE,mDAAC,aAAQ,WAAU,wBACX;AAAA,uDAAC,SAAI,WAAU,UAAS,MAAK,YAAO,SAAP,mBAAa,WAAW,KAAK,KAAK,eAAe,YAA9E;AAAA;AAAA;AAAA;AAAA,WAAwF;AAAA,IACxF,mDAAC,SAAI,WAAU,aACX;AAAA,yDAAC,QAAI,oBAAL;AAAA;AAAA;AAAA;AAAA,aAAY;AAAA,MACZ,mDAAC,OAAE,WAAU,SAAS,yBAAe,WAAW,KAAhD;AAAA;AAAA;AAAA;AAAA,aAAkD;AAAA,MAClD,mDAAC,OAAE,WAAU,SAAS,uBAAtB;AAAA;AAAA;AAAA;AAAA,aAAgC;AAAA,SAHpC;AAAA;AAAA;AAAA;AAAA,WAIA;AAAA,OANR;AAAA;AAAA;AAAA;AAAA,SAOA;AAEJ;",
  "names": []
}
